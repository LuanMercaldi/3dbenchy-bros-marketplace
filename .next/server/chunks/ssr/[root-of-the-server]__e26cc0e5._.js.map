{"version":3,"sources":["turbopack:///[project]/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts","turbopack:///[project]/node_modules/next/src/server/route-modules/app-page/vendored/contexts/app-router-context.ts","turbopack:///[project]/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-server-dom-turbopack-client.ts","turbopack:///[project]/node_modules/next/src/server/route-modules/app-page/vendored/contexts/hooks-client-context.ts","turbopack:///[project]/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-dom.ts","turbopack:///[project]/node_modules/next/src/server/route-modules/app-page/vendored/contexts/server-inserted-html.ts","turbopack:///[project]/node_modules/next/src/server/route-modules/app-page/module.compiled.js","turbopack:///[project]/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.ts","turbopack:///[project]/node_modules/next/src/client/components/handle-isr-error.tsx","turbopack:///[project]/node_modules/next/src/client/components/builtin/global-error.tsx","turbopack:///[project]/src/components/ui/Card.tsx","turbopack:///[project]/src/components/admin/AdminLayout.tsx","turbopack:///[project]/src/app/admin/dashboard/page.tsx"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.React\n","module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['contexts'].AppRouterContext\n","module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.ReactServerDOMTurbopackClient\n","module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['contexts'].HooksClientContext\n","module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.ReactDOM\n","module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['contexts'].ServerInsertedHtml\n","if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n","module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.ReactJsxRuntime\n","const workAsyncStorage =\n  typeof window === 'undefined'\n    ? (\n        require('../../server/app-render/work-async-storage.external') as typeof import('../../server/app-render/work-async-storage.external')\n      ).workAsyncStorage\n    : undefined\n\n// if we are revalidating we want to re-throw the error so the\n// function crashes so we can maintain our previous cache\n// instead of caching the error page\nexport function HandleISRError({ error }: { error: any }) {\n  if (workAsyncStorage) {\n    const store = workAsyncStorage.getStore()\n    if (store?.isRevalidate || store?.isStaticGeneration) {\n      console.error(error)\n      throw error\n    }\n  }\n\n  return null\n}\n","'use client'\n\nimport { HandleISRError } from '../handle-isr-error'\n\nconst styles = {\n  error: {\n    // https://github.com/sindresorhus/modern-normalize/blob/main/modern-normalize.css#L38-L52\n    fontFamily:\n      'system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"',\n    height: '100vh',\n    textAlign: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  text: {\n    fontSize: '14px',\n    fontWeight: 400,\n    lineHeight: '28px',\n    margin: '0 8px',\n  },\n} as const\n\nexport type GlobalErrorComponent = React.ComponentType<{\n  error: any\n}>\nfunction DefaultGlobalError({ error }: { error: any }) {\n  const digest: string | undefined = error?.digest\n  return (\n    <html id=\"__next_error__\">\n      <head></head>\n      <body>\n        <HandleISRError error={error} />\n        <div style={styles.error}>\n          <div>\n            <h2 style={styles.text}>\n              Application error: a {digest ? 'server' : 'client'}-side exception\n              has occurred while loading {window.location.hostname} (see the{' '}\n              {digest ? 'server logs' : 'browser console'} for more\n              information).\n            </h2>\n            {digest ? <p style={styles.text}>{`Digest: ${digest}`}</p> : null}\n          </div>\n        </div>\n      </body>\n    </html>\n  )\n}\n\n// Exported so that the import signature in the loaders can be identical to user\n// supplied custom global error signatures.\nexport default DefaultGlobalError\n","import React from 'react'\nimport { cn } from '@/lib/utils'\n\nexport interface CardProps extends React.HTMLAttributes<HTMLDivElement> {\n  variant?: 'default' | 'elevated' | 'outlined' | 'neon'\n  children: React.ReactNode\n}\n\nconst Card = React.forwardRef<HTMLDivElement, CardProps>(\n  ({ className, variant = 'default', children, ...props }, ref) => {\n    const baseClasses = [\n      'bg-card text-card-foreground image-pixelated transition-all duration-300'\n    ]\n\n    const variants = {\n      default: [\n        'border-2 border-border shadow-pixel-lg p-pixel-3',\n        'hover:shadow-neon hover:border-primary'\n      ],\n      elevated: [\n        'border-2 border-primary shadow-neon p-pixel-3',\n        'hover:shadow-neon-lg'\n      ],\n      outlined: [\n        'border-2 border-primary bg-transparent p-pixel-3',\n        'hover:bg-card hover:shadow-neon'\n      ],\n      neon: [\n        'border-2 border-primary shadow-neon p-pixel-3 bg-gradient-to-br from-card to-background',\n        'hover:shadow-neon-lg hover:from-background hover:to-card'\n      ]\n    }\n\n    return (\n      <div\n        className={cn(\n          baseClasses,\n          variants[variant],\n          className\n        )}\n        ref={ref}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n)\n\nCard.displayName = 'Card'\n\nconst CardHeader = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn('flex flex-col space-y-1.5 pb-pixel-2 border-b border-border', className)}\n      {...props}\n    />\n  )\n)\nCardHeader.displayName = 'CardHeader'\n\nconst CardTitle = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLHeadingElement>>(\n  ({ className, children, ...props }, ref) => (\n    <h3\n      ref={ref}\n      className={cn('font-pixel text-lg leading-none tracking-tight text-neon', className)}\n      {...props}\n    >\n      {children}\n    </h3>\n  )\n)\nCardTitle.displayName = 'CardTitle'\n\nconst CardDescription = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLParagraphElement>>(\n  ({ className, ...props }, ref) => (\n    <p\n      ref={ref}\n      className={cn('text-sm text-muted-foreground font-mono', className)}\n      {...props}\n    />\n  )\n)\nCardDescription.displayName = 'CardDescription'\n\nconst CardContent = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div \n      ref={ref} \n      className={cn('pt-pixel-2', className)} \n      {...props} \n    />\n  )\n)\nCardContent.displayName = 'CardContent'\n\nconst CardFooter = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => (\n    <div\n      ref={ref}\n      className={cn('flex items-center pt-pixel-2 border-t border-border', className)}\n      {...props}\n    />\n  )\n)\nCardFooter.displayName = 'CardFooter'\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n\n","'use client'\n\nimport React, { useState } from 'react'\nimport Link from 'next/link'\nimport { usePathname } from 'next/navigation'\nimport { Button } from '@/components/ui/Button'\nimport { Badge } from '@/components/ui/Badge'\n\ninterface AdminLayoutProps {\n  children: React.ReactNode\n}\n\nconst AdminLayout: React.FC<AdminLayoutProps> = ({ children }) => {\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n  const pathname = usePathname()\n\n  const navigation = [\n    {\n      name: 'Dashboard',\n      href: '/admin/dashboard',\n      icon: '📊',\n      description: 'Visão geral e métricas'\n    },\n    {\n      name: 'Produtos',\n      href: '/admin/products',\n      icon: '📦',\n      description: 'Gerenciar produtos'\n    },\n    {\n      name: 'Pedidos',\n      href: '/admin/orders',\n      icon: '🛒',\n      description: 'Gerenciar pedidos'\n    },\n    {\n      name: 'Usuários',\n      href: '/admin/users',\n      icon: '👥',\n      description: 'Gerenciar usuários'\n    },\n    {\n      name: 'Configurações',\n      href: '/admin/settings',\n      icon: '⚙️',\n      description: 'Configurações do sistema'\n    }\n  ]\n\n  const isActive = (href: string) => pathname === href || pathname.startsWith(href + '/')\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      {/* Mobile sidebar backdrop */}\n      {sidebarOpen && (\n        <div\n          className=\"fixed inset-0 z-40 bg-black bg-opacity-50 lg:hidden\"\n          onClick={() => setSidebarOpen(false)}\n        />\n      )}\n\n      {/* Sidebar */}\n      <div className={`fixed inset-y-0 left-0 z-50 w-64 bg-card border-r border-border transform transition-transform duration-200 ease-in-out lg:translate-x-0 lg:static lg:inset-0 ${\n        sidebarOpen ? 'translate-x-0' : '-translate-x-full'\n      }`}>\n        <div className=\"flex flex-col h-full\">\n          {/* Logo */}\n          <div className=\"flex items-center justify-between h-16 px-4 border-b border-border\">\n            <Link href=\"/admin/dashboard\" className=\"flex items-center space-x-2\">\n              <div className=\"w-8 h-8 bg-primary flex items-center justify-center image-pixelated\">\n                <span className=\"text-sm font-pixel\">3D</span>\n              </div>\n              <div>\n                <h1 className=\"font-pixel text-sm text-neon\">Admin Panel</h1>\n                <p className=\"text-xs font-mono text-muted-foreground\">3DBenchy Bros</p>\n              </div>\n            </Link>\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              className=\"lg:hidden\"\n              onClick={() => setSidebarOpen(false)}\n            >\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </Button>\n          </div>\n\n          {/* Navigation */}\n          <nav className=\"flex-1 px-4 py-4 space-y-2\">\n            {navigation.map((item) => (\n              <Link\n                key={item.name}\n                href={item.href}\n                className={`flex items-center space-x-3 px-3 py-2 text-sm font-mono transition-colors duration-200 image-pixelated ${\n                  isActive(item.href)\n                    ? 'bg-primary text-background'\n                    : 'text-muted-foreground hover:text-foreground hover:bg-muted'\n                }`}\n              >\n                <span className=\"text-lg\">{item.icon}</span>\n                <div>\n                  <div className=\"font-medium\">{item.name}</div>\n                  <div className=\"text-xs opacity-75\">{item.description}</div>\n                </div>\n              </Link>\n            ))}\n          </nav>\n\n          {/* User Info */}\n          <div className=\"p-4 border-t border-border\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"w-8 h-8 bg-secondary flex items-center justify-center image-pixelated\">\n                <span className=\"text-sm\">👤</span>\n              </div>\n              <div className=\"flex-1\">\n                <p className=\"text-sm font-mono font-medium\">Admin User</p>\n                <p className=\"text-xs font-mono text-muted-foreground\">admin@3dbenchy.com</p>\n              </div>\n            </div>\n            <div className=\"mt-3 space-y-2\">\n              <Link href=\"/\">\n                <Button variant=\"outline\" size=\"sm\" className=\"w-full text-xs\">\n                  Ver Site\n                </Button>\n              </Link>\n              <Button variant=\"ghost\" size=\"sm\" className=\"w-full text-xs text-destructive hover:text-destructive-foreground hover:bg-destructive\">\n                Sair\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Main content */}\n      <div className=\"lg:pl-64\">\n        {/* Top bar */}\n        <header className=\"h-16 bg-card border-b border-border flex items-center justify-between px-4 lg:px-6\">\n          <div className=\"flex items-center space-x-4\">\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              className=\"lg:hidden\"\n              onClick={() => setSidebarOpen(true)}\n            >\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n              </svg>\n            </Button>\n            \n            <div>\n              <h1 className=\"font-pixel text-lg text-neon\">\n                {navigation.find(item => isActive(item.href))?.name || 'Admin Panel'}\n              </h1>\n              <p className=\"text-xs font-mono text-muted-foreground\">\n                Painel de administração do marketplace\n              </p>\n            </div>\n          </div>\n\n          <div className=\"flex items-center space-x-4\">\n            <Badge variant=\"outline\" className=\"hidden sm:inline-flex\">\n              Sistema Online\n            </Badge>\n            \n            <Button variant=\"ghost\" size=\"sm\">\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 17h5l-5 5-5-5h5v-5a7.5 7.5 0 01-7.5-7.5H7.5a7.5 7.5 0 017.5 7.5v5z\" />\n              </svg>\n            </Button>\n            \n            <Button variant=\"ghost\" size=\"sm\">\n              <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 17h5l-5 5-5-5h5v-5a7.5 7.5 0 01-7.5-7.5H7.5a7.5 7.5 0 017.5 7.5v5z\" />\n              </svg>\n            </Button>\n          </div>\n        </header>\n\n        {/* Page content */}\n        <main className=\"p-4 lg:p-6\">\n          {children}\n        </main>\n      </div>\n    </div>\n  )\n}\n\nexport { AdminLayout }\n\n","'use client'\n\nimport React from 'react'\nimport { AdminLayout } from '@/components/admin/AdminLayout'\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/Card'\nimport { Badge } from '@/components/ui/Badge'\nimport { Button } from '@/components/ui/Button'\nimport { formatCurrency } from '@/lib/utils'\n\nexport default function AdminDashboardPage() {\n  // Mock data para demonstração\n  const stats = {\n    totalRevenue: 15420.50,\n    totalOrders: 127,\n    totalProducts: 45,\n    totalUsers: 89,\n    revenueGrowth: 12.5,\n    ordersGrowth: 8.3,\n    productsGrowth: 15.2,\n    usersGrowth: 22.1\n  }\n\n  const recentOrders = [\n    {\n      id: 'ORD-001',\n      customer: 'João Silva',\n      total: 89.90,\n      status: 'processing',\n      date: '2024-01-15T10:30:00Z'\n    },\n    {\n      id: 'ORD-002',\n      customer: 'Maria Santos',\n      total: 156.80,\n      status: 'shipped',\n      date: '2024-01-15T09:15:00Z'\n    },\n    {\n      id: 'ORD-003',\n      customer: 'Pedro Costa',\n      total: 45.90,\n      status: 'delivered',\n      date: '2024-01-14T16:20:00Z'\n    },\n    {\n      id: 'ORD-004',\n      customer: 'Ana Oliveira',\n      total: 234.50,\n      status: 'pending',\n      date: '2024-01-14T14:45:00Z'\n    }\n  ]\n\n  const topProducts = [\n    {\n      id: '1',\n      name: 'Benchy Clássico',\n      sales: 45,\n      revenue: 1345.50\n    },\n    {\n      id: '2',\n      name: 'Dragão Pixel Art',\n      sales: 32,\n      revenue: 1468.80\n    },\n    {\n      id: '3',\n      name: 'Suporte para Celular',\n      sales: 28,\n      revenue: 557.20\n    },\n    {\n      id: '4',\n      name: 'Miniatura RPG',\n      sales: 24,\n      revenue: 861.60\n    }\n  ]\n\n  const getStatusBadge = (status: string) => {\n    const statusMap = {\n      pending: { variant: 'outline' as const, label: 'Pendente' },\n      processing: { variant: 'default' as const, label: 'Processando' },\n      shipped: { variant: 'accent' as const, label: 'Enviado' },\n      delivered: { variant: 'neon' as const, label: 'Entregue' },\n      cancelled: { variant: 'destructive' as const, label: 'Cancelado' }\n    }\n    return statusMap[status as keyof typeof statusMap] || statusMap.pending\n  }\n\n  const formatDate = (dateString: string) => {\n    return new Date(dateString).toLocaleDateString('pt-BR', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    })\n  }\n\n  return (\n    <AdminLayout>\n      <div className=\"space-y-6\">\n        {/* Welcome */}\n        <div>\n          <h1 className=\"font-pixel text-2xl text-neon mb-2\">\n            Bem-vindo ao Dashboard\n          </h1>\n          <p className=\"text-muted-foreground font-mono\">\n            Visão geral do seu marketplace de impressão 3D\n          </p>\n        </div>\n\n        {/* Stats Cards */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n          <Card variant=\"neon\">\n            <CardHeader className=\"pb-2\">\n              <CardTitle className=\"text-sm font-mono text-muted-foreground\">\n                Receita Total\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"flex items-center justify-between\">\n                <span className=\"font-pixel text-2xl text-primary\">\n                  {formatCurrency(stats.totalRevenue)}\n                </span>\n                <Badge variant=\"neon\" size=\"sm\">\n                  +{stats.revenueGrowth}%\n                </Badge>\n              </div>\n              <p className=\"text-xs font-mono text-muted-foreground mt-1\">\n                vs. mês anterior\n              </p>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader className=\"pb-2\">\n              <CardTitle className=\"text-sm font-mono text-muted-foreground\">\n                Total de Pedidos\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"flex items-center justify-between\">\n                <span className=\"font-pixel text-2xl text-primary\">\n                  {stats.totalOrders}\n                </span>\n                <Badge variant=\"accent\" size=\"sm\">\n                  +{stats.ordersGrowth}%\n                </Badge>\n              </div>\n              <p className=\"text-xs font-mono text-muted-foreground mt-1\">\n                vs. mês anterior\n              </p>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader className=\"pb-2\">\n              <CardTitle className=\"text-sm font-mono text-muted-foreground\">\n                Produtos Ativos\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"flex items-center justify-between\">\n                <span className=\"font-pixel text-2xl text-primary\">\n                  {stats.totalProducts}\n                </span>\n                <Badge variant=\"outline\" size=\"sm\">\n                  +{stats.productsGrowth}%\n                </Badge>\n              </div>\n              <p className=\"text-xs font-mono text-muted-foreground mt-1\">\n                vs. mês anterior\n              </p>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader className=\"pb-2\">\n              <CardTitle className=\"text-sm font-mono text-muted-foreground\">\n                Usuários Registrados\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"flex items-center justify-between\">\n                <span className=\"font-pixel text-2xl text-primary\">\n                  {stats.totalUsers}\n                </span>\n                <Badge variant=\"neon\" size=\"sm\">\n                  +{stats.usersGrowth}%\n                </Badge>\n              </div>\n              <p className=\"text-xs font-mono text-muted-foreground mt-1\">\n                vs. mês anterior\n              </p>\n            </CardContent>\n          </Card>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n          {/* Recent Orders */}\n          <Card>\n            <CardHeader>\n              <div className=\"flex items-center justify-between\">\n                <CardTitle>Pedidos Recentes</CardTitle>\n                <Button variant=\"outline\" size=\"sm\">\n                  Ver Todos\n                </Button>\n              </div>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                {recentOrders.map((order) => (\n                  <div key={order.id} className=\"flex items-center justify-between p-3 bg-background border border-border image-pixelated\">\n                    <div className=\"flex-1\">\n                      <div className=\"flex items-center gap-2 mb-1\">\n                        <span className=\"font-mono text-sm font-medium\">\n                          {order.id}\n                        </span>\n                        <Badge {...getStatusBadge(order.status)} size=\"sm\">\n                          {getStatusBadge(order.status).label}\n                        </Badge>\n                      </div>\n                      <p className=\"text-sm text-muted-foreground font-mono\">\n                        {order.customer}\n                      </p>\n                      <p className=\"text-xs text-muted-foreground font-mono\">\n                        {formatDate(order.date)}\n                      </p>\n                    </div>\n                    <div className=\"text-right\">\n                      <span className=\"font-pixel text-primary\">\n                        {formatCurrency(order.total)}\n                      </span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Top Products */}\n          <Card>\n            <CardHeader>\n              <div className=\"flex items-center justify-between\">\n                <CardTitle>Produtos Mais Vendidos</CardTitle>\n                <Button variant=\"outline\" size=\"sm\">\n                  Ver Relatório\n                </Button>\n              </div>\n            </CardHeader>\n            <CardContent>\n              <div className=\"space-y-4\">\n                {topProducts.map((product, index) => (\n                  <div key={product.id} className=\"flex items-center justify-between p-3 bg-background border border-border image-pixelated\">\n                    <div className=\"flex items-center gap-3\">\n                      <div className=\"w-8 h-8 bg-primary flex items-center justify-center image-pixelated\">\n                        <span className=\"text-xs font-pixel text-background\">\n                          #{index + 1}\n                        </span>\n                      </div>\n                      <div>\n                        <p className=\"font-mono text-sm font-medium\">\n                          {product.name}\n                        </p>\n                        <p className=\"text-xs text-muted-foreground font-mono\">\n                          {product.sales} vendas\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"text-right\">\n                      <span className=\"font-pixel text-primary\">\n                        {formatCurrency(product.revenue)}\n                      </span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Quick Actions */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Ações Rápidas</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4\">\n              <Button className=\"h-auto p-4 flex flex-col items-center space-y-2\">\n                <span className=\"text-2xl\">📦</span>\n                <span className=\"font-mono text-sm\">Adicionar Produto</span>\n              </Button>\n              \n              <Button variant=\"outline\" className=\"h-auto p-4 flex flex-col items-center space-y-2\">\n                <span className=\"text-2xl\">🛒</span>\n                <span className=\"font-mono text-sm\">Ver Pedidos</span>\n              </Button>\n              \n              <Button variant=\"outline\" className=\"h-auto p-4 flex flex-col items-center space-y-2\">\n                <span className=\"text-2xl\">👥</span>\n                <span className=\"font-mono text-sm\">Gerenciar Usuários</span>\n              </Button>\n              \n              <Button variant=\"outline\" className=\"h-auto p-4 flex flex-col items-center space-y-2\">\n                <span className=\"text-2xl\">📊</span>\n                <span className=\"font-mono text-sm\">Relatórios</span>\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </AdminLayout>\n  )\n}\n\n"],"names":["module","exports","require","vendored","React","AppRouterContext","ReactServerDOMTurbopackClient","HooksClientContext","ReactDOM","ServerInsertedHtml","process","env","NEXT_RUNTIME","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK","ReactJsxRuntime","HandleISRError","workAsyncStorage","window","undefined","error","store","getStore","isRevalidate","isStaticGeneration","console","styles","fontFamily","height","textAlign","display","flexDirection","alignItems","justifyContent","text","fontSize","fontWeight","lineHeight","margin","DefaultGlobalError","digest","html","id","head","body","div","style","h2","location","hostname","p"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9]}